// replicator.script
// happylittleforkbomb fork
// u/pythonbashman

// Programs on home
print('checking programs');
var programs = ["brutessh.exe",
    "ftpcrack.exe",
    "relaysmtp.exe",
    "httpworm.exe",
    "sqlinject.exe",
    "nuke.exe"
];

// How many programs are on home
var progs = 0;
for (var j = 0; j < programs.length; j++) {
    var prog = programs[j];
    if (fileExists(prog, "home")) {
        progs++;
        print(progs + ' found');
    }
}

// var scanner = scan(getHostname());
if (getHostname() == "home") {
    updateTime = Date.now();
    write("_replicator.time.txt", data = updateTime, mode = "w");
}

//var servers2 = [getHostname()];
//var scanner = scan(getHostname());
if (args[0] !== null) {
    var servers = scan(args[0]);
} else {
    //var servers = servers2.concat(scanner);
    var servers = scan(getHostname());
}

// Main routine
for (var i = 0; i < servers.length; i++) {
    var serv = servers[i];
    switch (serv) {
        // I figured out how to use RegEx here
        // If its Home, the darkweb, your brokerage, or one of the RAMLess hacker severs, Skip.
        case (serv.match(/-hack$|home|darkweb|TradingHouse/) || {}).input:
            break;
        // If RAMLess target, Skip.
        case (args[0]):
            break;
        // If Self, Skip.
        case getHostname():
            break;
        // Otherwise start main function
        default:
            if (serverExists(serv)) {
                files = ["replicator.script", "milk.script", "h.script", "g.script", "w.script", "_replicator.time.txt"];
                scp(files, "home", serv);
                // Servers that have no RAM... Lets hack'em anyway :)
                NextTargetRes = getServerRam(serv);
                NextTargetRAM = NextTargetRes[0];
                if (NextTargetRAM < 1) {
                    exec("ramless.script", "home", 1, serv);
                }
                // No root access? Break open and nuke, if home has enough programs.
                if (!hasRootAccess(serv)) {
                    if (getServerRequiredHackingLevel(serv) > getHackingLevel()) {} else {
                        var ports = getServerNumPortsRequired(serv);
                        if (!fileExists(programs[5], "home")) {} else if (ports + 1 > progs) {
                            for (; progs < ports + 1;) {
                                var progs = 0;
                                for (var j = 0; j < programs.length; j++) {
                                    var prog = programs[j];
                                    if (fileExists(prog, "home")) {
                                        progs++;
                                    }
                                }
                            }
                        } else {
                            for (var j = 0; j < ports; j++) {
                                if (fileExists(programs[0], "home")) {
                                    brutessh(serv);
                                    j++;
                                    if (j >= ports) { break; }
                                }
                                if (fileExists(programs[1], "home")) {
                                    ftpcrack(serv);
                                    j++;
                                    if (j >= ports) { break; }
                                }
                                if (fileExists(programs[2], "home")) {
                                    relaysmtp(serv);
                                    j++;
                                    if (j >= ports) { break; }
                                }
                                if (fileExists(programs[3], "home")) {
                                    httpworm(serv);
                                    j++;
                                    if (j >= ports) { break; }
                                }
                                if (fileExists(programs[4], "home")) {
                                    sqlinject(serv);
                                    j++;
                                    if (j >= ports) { break; }
                                }
                            }
                            nuke(serv);
                        }
                    }
                }

                // Is this a new run, or part of the last run?
                if (read("_replicator.time.txt") > read("_replicator.time.last.txt")) {
                    if (NextTargetRAM > 1) {
                        killall(serv);
                        sleep(2000);
                        exec("replicator.script", serv, 1);
                    }
                }
            }
    }
}

// Should we be milking this target.
switch (getHostname()) {
    // I figured out how to use RegEx here
    case (serv.match(/home|darkweb|TradingHouse/) || {}).input:
        break;
    // RAMLess target? Don't try to run.
    case (args[0]):
        break;
    // RAMLess Hacker? Take the args passed into replicator that would have 
    // only come from trying to attack a server without ram.
    case (serv.match(/-hack$/) || {}).input:
        if (!fileExists("_replicator.time.last.txt")) {
            write("_replicator.time.last.txt", data = 0, mode = "w");
        }
        write("_replicator.time.last.txt", data = read("_replicator.time.txt"), mode = "w");
        exec("ramless_hacker.script", "home", 1, serv);
        sleep(5000);
        break;
    // If everything else didn't trigger then behave normally.
    default:
        if (!fileExists("_replicator.time.last.txt")) {
            write("_replicator.time.last.txt", data = 0, mode = "w");
        }
        write("_replicator.time.last.txt", data = read("_replicator.time.txt"), mode = "w");
        exec("milk.script", getHostname(), 1);
        sleep(5000);
        break;
}